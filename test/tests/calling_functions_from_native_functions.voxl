fn a() {
	ret 5;
}

// Call language function.
print(invoke(a));
// Call native function.
print(invoke(get_5));

fn b() {
	throw 3;
}

// Catch language exception.
try {
	invoke(b);
} catch Int => value {
	print(value);
}

// Catch native exception.
try {
	invoke(throw_3);
} catch Int => value {
	print(value);
}

// Multiple levels.
fn c() {
	ret invoke(a);
}

print(invoke(c));

fn d() {
	ret invoke(b);
}

try {
	invoke(d);
} catch Int => value {
	print(value);
}